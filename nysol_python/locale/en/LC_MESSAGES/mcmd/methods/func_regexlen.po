# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, nysol
# This file is distributed under the same license as the nysol_python
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nysol_python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-23 12:48+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../mcmd/methods/func_regexlen.rst:2
msgid "regexlen マッチ文字数"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:4
msgid "書式1: regexlen(str,正規表現)"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:5
msgid "書式2: regexlenw(str,正規表現)"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:8
msgid ""
"指定した正規表現が最長マッチする文字列 :math:`str` の部分文字列の長さを返す。 "
"マッチしなければ0を返す。すなわち0文字にマッチしたと解釈する。 :math:`str` "
"もしくは正規表現にマルチバイト文字を含む場合はregexlenw関数を使うこと。"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:14
msgid "利用例"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:16
msgid "**importと入力データ(CSV)の準備**"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:42
msgid "**基本例**"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:44
msgid ""
"正規表現 ``c.*a`` に最も長くマッチする部分文字列の長さを得る。 マッチした部分文字列については ``regexstr`` "
"と同じ入力データを使っているので、比較すると分かりやすい。"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:59
msgid "**マルチバイト文字**"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:61
msgid ""
"正規表現 ``\"あ.*い\"`` に最も長くマッチする部分文字列の長さを得る。 "
"ただし、以下ではマルチバイト文字対応でないregexlen関数を使っているので、 文字数ではなくバイト数を返している。"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:77
msgid "**マルチバイト文字2**"
msgstr ""

#: ../../mcmd/methods/func_regexlen.rst:79
msgid ""
"正規表現 ``\"あ.*い\"`` に最も長くマッチする部分文字列の長さを得る。 "
"regexlenw関数を使うと、正しくマルチバイト文字を扱ってくれる。"
msgstr ""

