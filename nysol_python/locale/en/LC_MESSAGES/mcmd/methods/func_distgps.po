# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, nysol
# This file is distributed under the same license as the nysol_python
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nysol_python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-23 12:48+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../mcmd/methods/func_distgps.rst:2
msgid "distgps GPS距離"
msgstr ""

#: ../../mcmd/methods/func_distgps.rst:4
msgid "書式1: distgps(緯度1,経度1,緯度2,経度2,[方位])"
msgstr ""

#: ../../mcmd/methods/func_distgps.rst:7
msgid ""
"2地点の緯度経度座標からその直線距離(km単位)を求める。 緯度経度は10進表記で与える。 地球の球状を考慮した計算を行っている。 "
"緯度経度の指定は、60進表記には対応しておらず10進表記に変換しておくことが必要である。 60進法で表記された度分秒をそれぞれ "
":math:`d,m,s` とすると、 10進の座標は :math:`d+m/60+s/60/60` で計算できる。 "
"また方位については、北緯と東経はプラスで表記し、南緯と西経はマイナスで表記する。 "
"例えば、大阪駅(北緯34.702398,東経135.495188),東京駅間(北緯35.681391,東経139.766103)の距離を求めるには"
" 以下のとおり指定すればよい。 egin{verbatim} "
"distgps(34.702398,135.495188,35.681391,139.766103) \\end{verbatim} "
"またエベレスト(北緯32.655556,東経79.015833),からアコンカグア(南緯27.987778,西経86.944444)の距離は、以下のとおり指定すればよい。"
" egin{verbatim} distgps(32.655556,79.015833,-27.987778,-86.944444) "
"\\end{verbatim}"
msgstr ""

#: ../../mcmd/methods/func_distgps.rst:26
msgid "利用例"
msgstr ""

#: ../../mcmd/methods/func_distgps.rst:28
msgid "**importと入力データ(CSV)の準備**"
msgstr ""

#: ../../mcmd/methods/func_distgps.rst:47
msgid "**基本例**"
msgstr ""

