# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, nysol
# This file is distributed under the same license as the nysol_python
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nysol_python \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-23 12:48+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../mcmd/common_param.rst:5
msgid "共通パラメータ"
msgstr ""

#: ../../mcmd/common_param.rst:6
msgid ""
"処理メソッドで指定できるパラメータには、概ね共通した意味で用いられるものが多い。 "
"ただし、メソッドによっては全く異なる意味として実装されているケースもあるので注意されたい。 "
":numref:`common_param_table` に一覧を示し、続いてその内容について詳述する。"
msgstr ""

#: ../../mcmd/common_param.rst:10
msgid "入力データ例:mcmdが扱う表構造データ"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "キーワード"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "内容"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`i= m=<common_param_i>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "入力データの指定"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`o= u=<common_param_o>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "出力データの指定"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`f=<common_param_f>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "入出力項目名の指定"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`k=<common_param_k>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "キー項目名"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`s=<common_param_s>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "並べ替え項目名"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`q=<common_param_q>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "自動並べ替えの無効化"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`a=<common_param_a>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "追加項目名"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`nfn=<common_param_nfn>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "入出力データの1行目を項目名ヘッダとみなさない"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`nfno=<common_param_nfno>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "項目名ヘッダを出力しない"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`x=<common_param_x>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "項目番号による指定"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`precision=<common_param_precision>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "有効桁数の変更設定"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`tmpPath=<common_param_tmpPath>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "作業ファイル格納パス名"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`delim=<common_param_delim>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "ベクトル型データの区切り文字"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`bufcount=<common_param_bufcount>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "キー単位処理のバッファ数"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`assert_diffSize=<common_param_assert_diffSize>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "入出力件数が異なればwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`assert_nullkey=<common_param_assert_nullkey>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "キー項目のNULL値にwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`assert_nullin=<common_param_assert_nullin>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "入力項目のNULL値にwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid ":ref:`assert_nullout=<common_param_assert_nullout>`"
msgstr ""

#: ../../mcmd/common_param.rst:1
msgid "出力項目のNULL値にwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:37
msgid "i= m= : 入力データの指定"
msgstr ""

#: ../../mcmd/common_param.rst:38
msgid ""
"入力データを指定するパラメータ( ``i=`` と ``m=`` )には、 "
"CSVファイル名、Pythonリスト、処理フローオブジェクトを指定できる。 中には ``mnewrand`` "
"のように入力データを必要としないメソッドもあるが、 ``i=`` はほとんどのメソッドで利用できるパラメータであり、 ``m=`` は "
"``mjoin`` など参照データを利用するメソッドにおいて利用される。 "
"いずれの形式であっても、全行で同数の項目数を持っていなければエラーとなる。 ``i=`` が省略された時には標準入力からデータを読み込む。 "
"この機能があるために、パイプラインによる接続が可能となる。 例えば、 :numref:`common_param_i_stdin` "
"では、 ``msum`` で ``i=`` を指定していないが、 これは ``mcut`` "
"の結果がパイプラインを介して標準入力としてCSVデータが入力されるためである。"
msgstr ""

#: ../../mcmd/common_param.rst:49 ../../mcmd/common_param.rst:142
msgid "i=を省いた場合は標準入力から読み込む"
msgstr ""

#: ../../mcmd/common_param.rst:67
msgid "入力データの複数指定"
msgstr ""

#: ../../mcmd/common_param.rst:69
msgid ""
"入力データを複数指定することもでき、その場合は、それらのデータが全て併合される。 これは、実行時に ``m2cat`` "
"を自動的に付加することによって実現している。 さらに入力側に接続されたメソッドからの標準入力も併合対象になる。 "
"複数指定したいずれのデータも項目名が同一でなければならない。 サンプルコードを :numref:`common_param_i_multi` "
"に示す。"
msgstr ""

#: ../../mcmd/common_param.rst:75
msgid "i=に複数データを指定する例"
msgstr ""

#: ../../mcmd/common_param.rst:130
msgid "o= u= : 出力データの指定"
msgstr ""

#: ../../mcmd/common_param.rst:131
msgid ""
"出力データを指定するパラメータ( ``o=`` と ``u=`` )には、 CSVファイル名、Pythonリストを指定できる。 中には "
"``msep`` のように ``o=`` を指定しないメソッドもあるが、 ``o=`` はほとんどのメソッドで利用できるパラメータであり、 "
"``u=`` は ``mselstr`` など行を選択するメソッドにおいて、 条件にアンマッチの行を出力するデータとして用いられる。 ``o=``"
" が省略された時には標準出力にデータを書き込む。 この機能があるために、パイプラインによる接続が可能となる。 例えば、 "
":numref:`common_param_o_stdout` では、 ``mcut`` で ``o=`` を指定していないが、 これは "
"``mcut`` の結果がパイプラインを介して標準出力としてCSVデータが ``msum`` に出力されるためである。"
msgstr ""

#: ../../mcmd/common_param.rst:159
msgid ""
":numref:`common_param_o_exp` に利用例をいくつか示す。 CSVファイルに出力するには、 ``o=`` "
"にファイル名を与えればよい。 リストに出力する時は、 ``o=`` に空のリストを与えればよい。 "
"ただし、追記になるので、リストが空でなければ追記されていく。 "
"さらに、項目数などフォーマットが異なっていても追記できるので、扱いには注意が必要である。"
msgstr ""

#: ../../mcmd/common_param.rst:165
msgid "o=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:209
msgid "f= : 入出力項目名の指定"
msgstr ""

#: ../../mcmd/common_param.rst:210
msgid ""
"処理対象となる入力項目名の指定をおこなう。 例えば、mcut においては「選択される項目名」、 magg においては 「集計される項目名」、 "
"mjoin においては「結合される項目名」を指定する。 また複数の項目名は、 ``f=\"a,b,c\"`` のようにカンマで区切って指定する。"
" さらに、mcut、msum、mjoinのように指定された項目毎に出力項目名を指定できるメソッドもある。 出力項目名は、 "
"``f=\"a:A,b:B\"`` のように、入力項目名の後にコロンで区切って指定する。 "
"出力項目名が省略されたときは、入力項目名と同じ項目名が利用される。 その利用例を :numref:`common_param_f_exp` "
"に示す。"
msgstr ""

#: ../../mcmd/common_param.rst:220
msgid "f=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:241
msgid "k= : キー項目の指定"
msgstr ""

#: ../../mcmd/common_param.rst:242
msgid ""
"キー項目を指定する(複数項目指定可)。 "
"キー項目とは、集計の単位として指定したり、またファイルの結合時に2ファイル間の共通項目として指定する項目である。 例えば、msum "
"では、同一キーごとに合計処理をおこなう(集計キーブレイク処理)。 また mjoin では、2 "
"つのデータファイルについて、キー項目の大小を見比べて結合処理を実施する(結合キーブレイク処理)。 "
"k=パラメータが指定されたとき、多くのメソッドでは、その項目を文字列昇順で並べ替えた上で、 それぞれの処理を実行する。 "
"並べ替え処理は、実行時に自動追加される(「 :doc:`autoadd` 」節参照)。 "
"ただし、入力データがk=で指定した項目で既に並べ変わっている時は、並べ替えは実行されない(必要ない)。 また、mhashsum "
"メソッドのように、アルゴリズムの性質から ``k=`` を指定しても 並べ替えを行わない例外的なメソッドもある。 "
"なおキーブレイク処理については、 :ref:`後述<common_keybreak>` するが、 "
"項目の並べ替えが頻繁に発生するとパフォーマンスの低下を招くため、 "
"キーブレイク処理の内容と必要性を理解した上で、並べ替えの回数を少なくするスクリプトを記述することが望ましい。 "
":numref:`common_param_k_exp` に集計キーブレイク処理の例としてmsumを、 そして結合キーブレイク処理の例として "
"mjoinの例を示す。 なお、出力されたCSVデータの項目ヘッダの%に続く特殊記号の意味は「 :doc:`項目名ヘッダー<field>`  "
"」の節を参照されたい。"
msgstr ""

#: ../../mcmd/common_param.rst:259 ../../mcmd/common_param.rst:330
msgid "k=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:298
msgid "キーブレイク処理"
msgstr ""

#: ../../mcmd/common_param.rst:299
msgid ""
"**キーブレイク処理** とは、その項目が並べ換わっていることを前提として、 同一のキー項目値毎に一定の処理を行う処理方式のことを言う。 "
"キーブレイク処理は大きく分けて 2 つの処理に分けられる。 一つは集計のためのキーブレイク処理 (「 **集計キーブレイク処理** "
"」と呼ぶ) で、 他方は結合のためのキーブレイク処理 (「 **結合キーブレイク処理** 」と呼ぶ) である。 "
"mjoin、mcommon のようにメソッド名に「join」もしくは「common」を含むメソッドが結合キーブレイク処理を、 それ以外の "
"k=パラメータを指定できるメソッドの多くは集計キーブレイク処理を行っていると考えてよい。"
msgstr ""

#: ../../mcmd/common_param.rst:307
msgid ""
"たとえば集計キーブレイク処理を行う msum メソッドでは、キー項目の値の変化を検知することで、 同一キー毎に合計処理を実行する。 "
"そのためには事前にキー項目で行を並べ替える(文字列昇順)必要があるので、 "
"合計処理を行う前に、並べ替え処理が実行される(自動追加されるのでユーザは並べ替えを気にする必要はない)。"
msgstr ""

#: ../../mcmd/common_param.rst:312
msgid ""
"結合キーブレイク処理はもう少し複雑で、たとえば mjoin メソッドは、2 つのデータについて、 キー項目の大小を見比べる。 "
"キー項目が小さいデータは読み進め、キー項目値が同じであれば結合処理を実施する。 この "
"ようにキー項目値の大小比較をしているため、結合のためのキーブレイク処理においては、 事前に 2 "
"つのデータともキー項目で並べ替えられていることが前提となる。 そのため mjoin は、 ``i=`` と ``m=`` "
"で指定されたデータをそれぞれキー項目で並べ替える。 また、mrjoin "
"のような数値範囲による結合キーブレイク処理においては、数値昇順で並べ替えを行う。"
msgstr ""

#: ../../mcmd/common_param.rst:320
msgid ""
"キーブレイク処理を伴うメソッドでは、k=で項目を指定するだけで、 裏で並べ替えをの要否を判断し、必要な場合は並べ替えを実行してくれる。 "
"そのため、ユーザは原則としての並べ替えを意識する必要はない。 ただ並べ替え処理が不要になったわけではなく、 "
"各メソッドが内部的に並べ替え処理を行っているという点に注意が必要である。 スクリプトの構成によっては、並 "
"替え処理が頻繁に発生し、パフォーマンス低下の原因となる。 このことを示す例を :numref:`common_keybreak_exp` "
"に示している。 この例では、datに2つの表(custとinvoice)を結合し、``customer`` 別に ``amount`` "
"を合計する処理である。 そして、2つのmjoinの順序を入れ替えるだけで、ソートの回数が1回減ることを示している。"
msgstr ""

#: ../../mcmd/common_param.rst:382
msgid ""
":numref:`common_keybreak_exp` の例は、実行順を入れ替えるだけでパフォーマンスを改善できることを示すものである。 "
"処理フロー全体を調べれば、このような改善(最適化)は自動的に行える可能性があるが、 現在のところ実装はされておらず、将来の課題としたい。"
msgstr ""

#: ../../mcmd/common_param.rst:389
msgid "s= : 並べ替え項目の指定"
msgstr ""

#: ../../mcmd/common_param.rst:390
msgid ""
"maccum などいくつかのメソッドは、行(レコード)の順序が処理結果に影響を与える。 "
"s=パラメータを指定すると、そのメソッドの実行前に指定の項目で行を並べ替え処理を実行する。 "
"項目の並べ替え方法(並び順)は、数値/文字列、昇順/降順の組み合わせで 4 通り指定できる。 指定方法は、項目名 のあと % に続けて n"
" と r を以下の通り組み合わせる。"
msgstr ""

#: ../../mcmd/common_param.rst:395
msgid "文字列昇順: s=項目名 (% 指定なし)"
msgstr ""

#: ../../mcmd/common_param.rst:396
#, python-format
msgid "文字列逆順: s=項目名%r"
msgstr ""

#: ../../mcmd/common_param.rst:397
msgid "数値昇順: s=項目名%n"
msgstr ""

#: ../../mcmd/common_param.rst:398
msgid "数値降順: s=項目名%nr"
msgstr ""

#: ../../mcmd/common_param.rst:400
msgid ""
"なお、k=とs=の両方を指定した場合は、k=の項目を優先して並べる。 また、並べ替え項目を複数指定することも可能である。 "
":numref:`common_param_s_exp` にs=の利用例を示している。 "
"なお、出力されたCSVデータの項目ヘッダの%に続く特殊記号の意味は「 :doc:`項目名ヘッダー<field>`  」の節を参照されたい。"
msgstr ""

#: ../../mcmd/common_param.rst:405
msgid "s=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:447
msgid "**対象メソッド**"
msgstr ""

#: ../../mcmd/common_param.rst:449
msgid ""
":doc:`maccum<methods/maccum>` , :doc:`mbest<methods/mbest>` , "
":doc:`mmvavg<methods/mmvavg>` , :doc:`mnumber<methods/mnumber>` , "
":doc:`mslide<methods/mslide>` など"
msgstr ""

#: ../../mcmd/common_param.rst:458
msgid "q= : 自動並べ替えの無効化"
msgstr ""

#: ../../mcmd/common_param.rst:459
msgid ""
"k=で指定した項目による自動並べ替えを無効にしたい場合にこのオプションを用いる。 "
"またs=が必要なメソッドでq=を指定するとs=を省略可能となる。 s=を指定したとしてもソートは実行されない。 "
":numref:`common_param_q_exp` に利用例を示す。 k=で指定された ``customer`` "
"項目の値に変化のあった時に集計(合計)がおこなわれるため、 入力データの1行目、2,3行目、そして4行目の3ブロックが集計単位となる。"
msgstr ""

#: ../../mcmd/common_param.rst:466
msgid "q=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:492
msgid "a= : 追加項目の指定"
msgstr ""

#: ../../mcmd/common_param.rst:493
msgid ""
"新たに項目を追加するようなメソッドにおいて、その項目名を指定する。 "
"多くのメソッドは、追加する項目は一つであるため、ここで指定する項目名も一つであることが多い。 中には、 "
":doc:`mcombi<methods/mcombi>` や :doc:`msetstr<methods/msetstr>` "
"のように複数の項目を出力するものもあるが、 その際はカンマで区切って複数の項目名を指定する。 "
":numref:`common_param_a_exp` に利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:500
msgid "a=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:537
msgid "nfn= : 1行目を項目名ヘッダとみなさない"
msgstr ""

#: ../../mcmd/common_param.rst:538
msgid ""
"このオプションを指定すると入力データの 1 行目を項目名行とみなさず、 また出力データにも項目名を出力しない。 "
"主に1行目に項目名がないデータの場合に利用される。 "
"このオプションを指定すると項目指定で項目名は利用できないので項目番号指定をすることになる。 項目番号は 0 "
"から始まる整数で指定することに注意する。 項目番号の指定方法の詳細は「 :doc:`field` 」を参照されたい。 "
"また、自動ソートの機能は全く働かなくなるため、 :ref:`k=<common_param_k>` や "
":ref:`s=<common_param_s>` を必要とするメソッドの実行においては、 実行前に明示的に "
":doc:`msortf<methods/msortf>` でソーティングを実行する必要がある。 "
"自動ソートは、項目名ヘッダにその情報を記録しており、その情報が使えなくなるからである。 "
"よって、k=やs=を必要とするメソッドを明示的にソーティングせずに実行すれば、 :ref:`q=True<common_param_q>` "
"を指定して実行した結果と同等になる。 :numref:`common_param_nfn_exp` に利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:552
msgid "nfn=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:576
msgid "nfno= : 項目名ヘッダを出力しない"
msgstr ""

#: ../../mcmd/common_param.rst:577
msgid ""
"このオプションを指定すると出力データに項目名行を出力しない。 :ref:`nfn=True<common_param_nfn>` とは違い、 "
"i=やm=で指定される入力データは項目名ヘッダを伴うデータであることを前提としており、 :ref:`f=<common_param_f>` "
"や :ref:`k=<common_param_k>` などによる項目の指定は項目名で行う。 よって、自動ソートも機能する。 ただし、 "
"``f=iName:oName`` のように出力項目名を指定しても無効になる。 "
"出力を処理メソッドで接続していった場合、それ以降は自動ソートは無効になる。 ちなみに、入力側のみ項目名ヘッダを想定しない "
"``nfni=True`` は :doc:`mcut<methods/mcut>` でのみ利用可能なオプションである。 "
":numref:`common_param_nfno_exp` に ``nfno=True`` の利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:588
msgid "nfno=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:611
msgid "x= : 項目番号による指定"
msgstr ""

#: ../../mcmd/common_param.rst:612
msgid ""
"項目名ヘッダを伴う入力データに対して項目番号によって項目を指定したい場合にこのオプションを用いる。 "
"コロンで区切って出力項目名を指定することも可能である。 また項目名ヘッダを伴うために自動ソートも機能する。 "
":numref:`common_param_x_exp` に利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:617
msgid "x=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:649
msgid "precision="
msgstr ""

#: ../../mcmd/common_param.rst:650
msgid ""
"浮動小数点を扱うメソッド(msumやmavgなど)の内部で、結果をテキストで出力する際に、 C 言語におけるsprintfの書式 \"%. "
"``有効桁数`` g\" を用いている。 この書式は、データの桁数と指定した ``有効桁数`` によって、 標準標記 (整数部.小数部: ex."
" 123.456) と、 指数表記 (仮数部 e± 指数部: ex. 1.23456e+02) を切り替える。 "
"切り替えの基準であるが、データを指数表記で表したときに、指数部が指定の有効桁数を超えるか、 もしくは-5 以下の場合 "
"(すなわち、小数点以下に 0 が 4 つ以上続く場合) に指数表記を採用する。 ``有効桁数`` は 1から16 "
"の整数が指定可能で、デフォルトは 10 である。 n < 1 の場合は n = 1 にセットされ、n > 16 の場合は n = 16 "
"にセットされる。 また、環境変数 KG_Precision を設定することでも有効桁数を変更できる。 ただし、環境変数を変更すると、それ "
"以降に実行するコマンド全てに反映されることに注意する。 :numref:`common_param_precision_exp` "
"に利用例を示す。 id=1 は指数表現で 1.2345678e+08 であり、指数部が有効桁数 6 を超えているので指数表記となり、 "
"仮数部の有効桁数が 6 となっている。 id=2 は指数表現で 1.23456789e+03 であり、指数部が有効桁数 7 "
"を超えていないので標準標記 となり、 整数部 + 小数部の桁数が 6 となっている。 id=4 は指数表現で 1.23456789e-04 "
"であり、指数部が-4 未満では ないので標準標記となり、 有効桁数が 6 となっている。 id=5 は指数表現で "
"1.23456789e-05 であり、指数部が-4 未満 となるため指数表記となり、 仮数部の有効桁数が 6 となっている。"
msgstr ""

#: ../../mcmd/common_param.rst:671
msgid ""
"また、環境変数を ``KG_Precision='2'`` で指定して実行した例では、 mcalの出力結果項目でない ``val`` "
"項目も有効桁数が2桁になっている。 これは、Pythonリスト ``dat`` の ``val`` "
"項目の値がPythonの浮動小数点で入力されており、 それをテキストに変換する時にも環境変数の有効桁数の設定が影響するためである。 "
"なお、この変換は、実行時に自動追加される :ref:`readlist <autoadd_io>` メソッドが行っている。"
msgstr ""

#: ../../mcmd/common_param.rst:677
msgid "precision=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:717
msgid "tmpPath="
msgstr ""

#: ../../mcmd/common_param.rst:718
msgid ""
"処理メソッドが内部で用いる作業ファイルを格納するディレクトリ名を指定する。 例えば、msortf "
"は巨大なデータについては分割ソートを用いるが、その一時ファイルとして保存される。 "
"それ以外にも、キー項目の単位が大きくなった場合、キーブレイク処理で一時ファイルが用いられることもある。 また、 "
"処理フローが分岐する際に自動挿入される :doc:`mfifo<methods/mfifo>` の内部バッファでも "
"一時ファイルが用いられることがある。 一時ファイルの出力ディレクトリは、指定がなければデフォルトとして/tmp が用いられる。 "
"一時ファイルを格納するディレクトリは読み書き可能な状態で存在する必要がある。 一時ファイルは、必ず ``__KGTMP`` "
"から始まるファイル名が用いられる。"
msgstr ""

#: ../../mcmd/common_param.rst:727
msgid ""
"作業ファイルは、正常に終了すれば (エラー終了も含めて mcmd のコントロール下で正常に終了するという意味) "
"削除されるが、不測の事態(例えば、バグ終了の場合)には、消されず残る場合がある。 "
"データ量によっては、非常に多くの作業ファイルが生成される可能性があり (100 万ファイル以上!!)、 "
"その場合は、次に一時ファイルを利用する処理メソッドの動作が極端に遅くなる可能性がある( 100万ファイルあるディレクトリを ``ls`` "
"したときの遅さを想像してみればよい)。 現在のところ、これらの不要ファイ ルの自動消去 (ガベージコレクション) の機能は実装しておらず、 "
"定期的に作業パスのファイルを確認しておくべきである。 なお、/tmpディレクトリは、一般的にはosを再起動すればクリアされる。"
msgstr ""

#: ../../mcmd/common_param.rst:736
msgid ""
"また、環境変数 KG_Tmp_Path を設定することで、作業ディレクトリを変更できる。 "
"ただし、環境変数を変更すると、それ以降に実行する処理メソッド全てに反映されることに注意する。 "
":numref:`common_param_tmpPath_exp` に利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:740
msgid "tmpPath=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:757
msgid "delim= : ベクトル型データの区切り文字"
msgstr ""

#: ../../mcmd/common_param.rst:758
msgid ""
":doc:`mvcount<methods/mvcount>` などの処理メソッドが扱うベクトル型データについて、要素の区切り文字を指定する。"
" デフォルトは半角スペースである。 CSV の区切り文字であるカンマを指定することもできるが、ベクトルの区切り文字と区別するために "
"ベクトル全体がダブルクオーテーションで囲われる。 :numref:`common_param_delim_exp` に利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:764
msgid "delim=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:808
msgid "bufcount= : キー単位処理のバッファ数"
msgstr ""

#: ../../mcmd/common_param.rst:809
msgid ""
":doc:`mbucket<methods/mbucket>` , :doc:`mnjoin<methods/mnjoin>` , "
":doc:`mshare<methods/mshare>` など、 "
"キーブレイク処理において、データを複数パス走査する必要のあるコマンドにおいて利用する内部バッファの数 (ブロック数) を指定する。 "
"一つのバッファは 4MB で、デフォルトでは 10 ブロック (40MB) である。 "
"データがバッファに収まらない場合は一時ファイルに書き出されるため、 キーのサイズが非常に大きい場合は、メモリに余裕があれば、 "
"このパラメータを調整することで処理速度の向上が期待できる。 :numref:`common_param_bufcount_exp` "
"に利用例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:818
msgid "bufcount=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:830
msgid "assert_diffSize= : 入出力件数が異なればwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:831
msgid ""
"このパラメータを指定すると、指定した処理メソッドの入力ファイルと出力ファイルの件数の比較を行い、 入力ファイルと出力ファイルの件数 "
"が異なる場合に、「#WARNING# ; the number of lines is different」 というメッセージを表示する。"
msgstr ""

#: ../../mcmd/common_param.rst:835
msgid ""
"例えば、mjoin(参照ファイルの項目結合)を利用する際に、 入力ファイルのキー項目(k=パラメータで指定する項目)と "
"参照ファイルのキー項目(K=パラメータで指定する項目)が 完全に一致しているかどうかを確認したい場合を想定してみよう。 mjoin で "
"外部結合で NULL 値を出力する ``n=True`` オプションを指定しない場合は、 入力ファイルと参 "
"照ファイルで共通のキー項目のみが結合され、 一致しないキー項目の値は除外される為、入力データと出力データの件数が異なってくる。 その際、"
" ``assert_diffSize=True`` を指定しておくと、入力ファイルと出力ファイルの件数の比較を行い、 "
"入力ファイルと出力ファイルの件数が異なる場合にwarningを出してくれる。 "
"そのため入力ファイルと参照ファイルのキー項目が完全に一致していないことを確認することができる。 "
":numref:`common_param_diffSize_exp` にそのような例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:847
msgid "assert_diffSize=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:883
msgid "assert_nullkey= : キー項目のNULL値にwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:884
msgid ""
"このパラメータを指定すると、キー項目 (k=または K=パラメータで指定する項目)にNULL値が "
"含まれているかどうかのチェックを行い、NULL 値が含まれていた場合に、 「#WARNING# ; exist NULL in key "
"filed」という メッセージを表示する。 :numref:`common_param_nullkey_exp` に例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:889
msgid "assert_nullkey=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:919
msgid "assert_nullin= : 入力項目のNULL値にwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:920
msgid ""
"このパラメータを指定すると、f=またはvf=で指定された入力項目にNULL値が含まれているかどうかのチェックを行い、 NULL "
"値が含まれていた場合に、「#WARNING# ; exist NULL in input data」というメッセージを表示する。 "
"f=などのパラメータで指定していない項目にNULL値があっても警告は出さない。 :numref:`common_param_nullin_exp`"
" に例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:925
msgid "assert_nullin=の利用例"
msgstr ""

#: ../../mcmd/common_param.rst:955
msgid "assert_nullout= : 出力項目のNULL値にwarningを出す"
msgstr ""

#: ../../mcmd/common_param.rst:956
msgid ""
"このパラメータを指定すると、出力項目に NULL 値が含まれているかどうかのチェックを行い、 NULL 値が含まれ "
"ていた場合に、「#WARNING# ; exist NULL in output data」というメッセージを表示する。 "
"ただし、計算項目など、入力データがそのまま出力されるものについてはチェックを行わない。 "
":numref:`common_param_nullout_exp` に例を示す。"
msgstr ""

#: ../../mcmd/common_param.rst:961
msgid "assert_nullout=の利用例"
msgstr ""

